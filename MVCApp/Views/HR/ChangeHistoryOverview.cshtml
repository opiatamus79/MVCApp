@model IEnumerable<MVCApp.ViewModels.ContractChanges>
@{
    ViewBag.Title = "ChangeHistory";
    Layout = "~/Views/Shared/_Layout.cshtml";



}
<h2>@ViewBag.Title</h2>

<!--ADD Another Partial view here for the table, the table that is showing contract changes.-->
<!--1. have table, click on a button to open up -->
<!--Button will be used for each row. When clicked will get the Id of the EmployeeContractChange-->

@Html.Partial("ChangeHistoryTable", Model);

<!--Will need to determine if we can add buton and pass the row selected to modal-->

<button id="History" type="button" class="btn btn-info btn-lg" data-toggle="modal" data-target="#myModal">View History</button>



<div id="myModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">@ViewBag.ModalHeader</h4>
            </div>
            <div class="modal-body">
                <div id="someDiv">

                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>





@section Scripts
{
<script>
    console.log("Came in here");
    document.getElementById("History").onclick = function () { myFunction() };
    function myFunction() {

        $("#someDiv").load("@Html.Raw(Url.Action("ChangeHistory", "HR"))", { changeLogID: 2, employeeID: 5 })
    } 

</script>


};